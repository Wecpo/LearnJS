// Скопирован ли массив?
// важность: 3
// Что выведет следующий код?

// let fruits = ["Яблоки", "Груша", "Апельсин"];

// // добавляем новое значение в "копию"
// let shoppingCart = fruits;
// shoppingCart.push("Банан");

// // что в fruits?
// alert( fruits.length ); // ?

() => {
  // 4
};

// Операции с массивами
// важность: 5
// Давайте произведём 5 операций с массивом.

// Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
// Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
// Удалите первый элемент массива и покажите его.
// Вставьте Рэп и Регги в начало массива.
// Массив по ходу выполнения операций:

// Джаз, Блюз
// Джаз, Блюз, Рок-н-ролл
// Джаз, Классика, Рок-н-ролл
// Классика, Рок-н-ролл
// Рэп, Регги, Классика, Рок-н-ролл

() => {
  let styles = ["Джаз", "Блюз"];
  styles.push("Рок-н-ролл");
  styles[Math.ceil(styles.length / 2 - 1)] = "Классика";
  console.log(styles.shift());
  styles.unshift("Рэп", "Регги");
};

// Вызов в контексте массива
// важность: 5
// Каков результат? Почему?

// let arr = ["a", "b"];

// arr.push(function() {
//   alert( this );
// });

// arr[2](); // ?

() => {
  // this - a, b, function
};

// Сумма введённых чисел
// важность: 4
// Напишите функцию sumInput(), которая:

// Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
// Заканчивает запрашивать значения, когда пользователь введёт не числовое значение,
//  пустую строку или нажмёт «Отмена».
// Подсчитывает и возвращает сумму элементов массива.
// P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

() => {
  function sumInput() {
    let array = [];
    while (true) {
      let newItem = prompt("Введите число");
      if (
        newItem === null ||
        newItem.trim() === "" ||
        !Number.isFinite(+newItem)
      ) {
        return array.length
          ? array.reduce((acc, currentValue) => (acc += +currentValue))
          : alert("Вы ввели не число");
      }
      array.push(+newItem);
    }
  }
  sumInput();
};

// Подмассив наибольшей суммы
// важность: 2
// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].

// Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.

// Функция getMaxSubSum(arr) должна возвращать эту сумму.

// Например:

// getMaxSubSum([-1, 2, 3, -9]) == 5 (сумма выделенных элементов)
// getMaxSubSum([2, -1, 2, 3, -9]) == 6
// getMaxSubSum([-1, 2, 3, -9, 11]) == 11
// getMaxSubSum([-2, -1, 1, 2]) == 3
// getMaxSubSum([100, -9, 2, -3, 5]) == 100
// getMaxSubSum([1, 2, 3]) == 6 (берём все)
// Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна «0»:

// getMaxSubSum([-1, -2, -3]) = 0
// Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.

() => {
  // O(n2)
  function getMaxSubSum(arr) {
    let maxSum = 0;
    for (let i = 0; i < arr.length; i++) {
      let fixedInt = 0;
      for (let j = i; j < arr.length; j++) {
        fixedInt += arr[j];
        if (fixedInt > maxSum) {
          maxSum = fixedInt;
        }
      }
    }
    console.log(maxSum);
    return maxSum;
  }
  getMaxSubSum([-1, 2, 3, -9]); //== 5 (сумма выделенных элементов)
  getMaxSubSum([2, -1, 2, 3, -9]); // == 6
  getMaxSubSum([-1, 2, 3, -9, 11]); //== 11
  getMaxSubSum([-2, -1, 1, 2]); // == 3
  getMaxSubSum([100, -9, 2, -3, 5]); // == 100
  getMaxSubSum([1, 2, 3]); // == 6 (берём все)
};

() => {
  // O(n)
  function getMaxSubSum(arr) {
    let maxSum = 0;
    let partSum = 0;
    for (let item of arr) {
      partSum += item;
      if (partSum < 0) {
        partSum = 0;
      }
      if (partSum > maxSum) {
        maxSum = partSum;
      }
    }
    console.log(maxSum);
    return maxSum;
  }
  getMaxSubSum([-1, 2, 3, -9]); //== 5 (сумма выделенных элементов)
  getMaxSubSum([2, -1, 2, 3, -9]); // == 6
  getMaxSubSum([-1, 2, 3, -9, 11]); //== 11
  getMaxSubSum([-2, -1, 1, 2]); // == 3
  getMaxSubSum([100, -9, 2, -3, 5]); // == 100
  getMaxSubSum([1, 2, 3]); // == 6 (берём все)
};
