// Перебираемые (или итерируемые) объекты – это обобщение массивов.
//  Концепция, которая позволяет использовать любой объект в цикле for..of.

// Если объект не является массивом, но представляет собой коллекцию каких-то элементов
//  (список, набор), то удобно использовать цикл for..of для их перебора,
//  так что давайте посмотрим, как это сделать.

// Symbol.iterator

() => {
  let range = {
    from: 1,
    to: 5,
  };

  range[Symbol.iterator] = function () {
    return {
      current: this.from,
      last: this.to,

      next1() {
        if (this.current <= this.last) {
          return { done: false, value: this.current++ };
        } else {
          return { done: true };
        }
      },
    };
  };

  for (let num of range) {
    console.log(num);
  }
};

() => {
  for (let char of "test") {
    console.log(char);
  }
};

() => {
  // Явный вызов итератора
  let str = "Hello";

  // делает то же самое, что и
  // for (let char of str) alert(char);

  let iterator = str[Symbol.iterator]();

  while (true) {
    let result = iterator.next();
    if (result.done) break;
    alert(result.value); // выводит символы один за другим
  }
};

() => {
  //     Итерируемые объекты и псевдомассивы
  // Есть два официальных термина, которые очень похожи,
  // но в то же время сильно различаются. Поэтому убедитесь,что вы как следует поняли их,
  // чтобы избежать путаницы.
  // Итерируемые объекты – это объекты, которые реализуют метод Symbol.iterator,
  // как было описано выше.
  // Псевдомассивы – это объекты, у которых есть индексы и свойство length,
  // то есть, они выглядят как массивы.

  let arrayLike = {
    // есть индексы и свойство length => псевдомассив
    5: "Hello",
    6: "World",
    length: 6,
  };

  let array = Array.from(arrayLike); // если не будет например length, то Array.from вернет пустой массив
  console.log(array); // ['Hello, 'World', undefined]
  for (let item of array) {
    console.log(item); // Hello // World, undefined
  }

  //если имя свойства не индекс - то эррей фром вернет undefined
};

// Объекты которые можно использовать в цикле for .. of называются итерируемыми.
// - Технически итерируемые объекты должны иметь метод Symbol.iterator.
//   - Результат вызова obj[Symbol.iterator] называется итератором. Он управляет процессом итерации.
//   - Итератор должен иметь метод next(), который возвращает объект {done: Bolean, value: any},
//     где done: true - обозначает окончание процесса итерации, в противном случае value - след. значение.
// - Метод Symbol.iterator автоматически вызывается циклом for .. of, но можно вызвать его напрямую.
// - Встроенные итерируемые объекты, такие как строки или массивы, актже реализуют Symbol.iterator.
// - Строковый итератор знает про суррогатные пары.
