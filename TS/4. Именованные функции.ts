// Функции.
// Чтобы сделать параметр необязательным - 'name?'
() => {
    function getGreetingPhrase(name?: string) {
        return `Hello, ${name ? name.toUpperCase() : 'Guest'}!`;
      }
      // В таком случае name получает Union Type - string | undefined
}

// Тип возвращаемого значения выводится самостоятельно, но ЛУЧШЕ указывать!
// Это упрощает документирование и защищает код от случайных изменений.


//
//
//
//
//
// Задание
() => {
// Реализуйте функцию getHiddenCard(). 
// Она принимает на вход номер кредитки, который состоит из 16 цифр,
// в виде строки и возвращает его скрытую версию.
// Эта версия может использоваться на сайте для отображения.
// Например, если номер исходной карты был 2034399002125581, 
// то скрытая версия выглядит так: ****5581.

// Получается, функция заменяет первые 12 символов на звездочки. 
// Количество звездочек регулируется вторым необязательным параметром.
//  Значение по умолчанию — 4.

// Кредитка передается внутрь как строка
getHiddenCard('1234567812345678', 2) // "**5678"
getHiddenCard('1234567812345678', 3) // "***5678"
getHiddenCard('1234567812345678')    // "****5678"
getHiddenCard('2034399002121100', 1) // "*1100"

function getHiddenCard(str: string, count: number = 4): string {
    const firstStars = new Array(count).fill('*').join('')

    return firstStars + str.slice(12, str.length)
}
}